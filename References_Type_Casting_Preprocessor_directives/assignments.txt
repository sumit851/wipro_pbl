//1

#include <iostream>
#include <string>

using namespace std;

int factorialRecursion(int n){
    if(n < 0){
      cout <<"Invalid argument";
      return -1;
    }
    if(n == 0){
        return 1;
    }
    return n * factorialRecursion(n-1);
}

int main(){
     int num;
     cin >> num;

        cout << factorialRecursion(num) << endl;
}

//2
#include <iostream>
using namespace std;


void myswap(int &a, int &b) {
    int temp = a;
    a = b;
    b = temp;
}

int main() {
    int i, j;
    cout << "Enter two numbers : ";
    cin >> i >> j;
    
    system("clear");  
    
    cout << "\nBefore Swapping :\n";
    cout << " i : " << i << "\t" << "j : " << j << endl;
    
    myswap(i, j);
    
    cout << "\nAfter Swapping :\n";
    cout << " i : " << i << "\t" << "j : " << j << endl;
    
    return 0;
}
//3
#include <iostream>
#include <cstring>
using namespace std;

int GetVowelCount(char *str) {
    int count = 0;
    for(int i = 0; str[i] != '\0'; i++) {
        char c = tolower(str[i]);
        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
            count++;
        }
    }
    return count;
}

int main() {
    char word[100];
    
    while(true) {
        cout <<"Enter a word: ";
        cin >> word;
        
        int vowels = GetVowelCount(word);
        if(vowels >= 3) {
            cout << word << "   -- " << vowels << endl;
        }
    }
    
    return 0;
}
//4
#include <iostream>
using namespace std;

class DynamicArray {
private:
    int **arr;
    int rows, cols;

public:
  
    DynamicArray(int r, int c) : rows(r), cols(c) {
        arr = new int*[rows];
        for(int i = 0; i < rows; i++) {
            arr[i] = new int[cols];
        }
    }

    
    void inputElements() {
        cout << "Enter elements:" << endl;
        for(int i = 0; i < rows; i++) {
            for(int j = 0; j < cols; j++) {
                cout << "arr[" << i << "][" << j << "]: ";
                cin >> arr[i][j];
            }
        }
    }

   
    void displayArray() {
        cout << "\nArray contents:" << endl;
        for(int i = 0; i < rows; i++) {
            for(int j = 0; j < cols; j++) {
                cout << arr[i][j] << " ";
            }
            cout << endl;
        }
    }

    void increaseSize(int newRows) {
        if(newRows <= rows) return;

       
        int **newArr = new int*[newRows];
        for(int i = 0; i < newRows; i++) {
            newArr[i] = new int[cols];
        }

       
        for(int i = 0; i < rows; i++) {
            for(int j = 0; j < cols; j++) {
                newArr[i][j] = arr[i][j];
            }
        }

        
        for(int i = rows; i < newRows; i++) {
            for(int j = 0; j < cols; j++) {
                newArr[i][j] = 0;
            }
        }

        for(int i = 0; i < rows; i++) {
            delete[] arr[i];
        }
        delete[] arr;

       
        arr = newArr;
        rows = newRows;
    }

   
    ~DynamicArray() {
        for(int i = 0; i < rows; i++) {
            delete[] arr[i];
        }
        delete[] arr;
    }
};

int main(int argc, char* argv[]) {
    int rows, cols;

    if(argc == 3) {
        rows = atoi(argv[1]);
        cols = atoi(argv[2]);
    } else {
        cout << "Enter rows and columns: ";
        cin >> rows >> cols;
    }

    DynamicArray dArr(rows, cols);
    dArr.inputElements();
    dArr.displayArray();

    char choice;
    cout << "\nDo you want to increase array size? (y/n): ";
    cin >> choice;

    if(choice == 'y' || choice == 'Y') {
        int newRows;
        cout << "Enter new number of rows: ";
        cin >> newRows;
        dArr.increaseSize(newRows);
        dArr.displayArray();
    }

    return 0;
}

//5

#include <iostream>
#include <cctype>
using namespace std;


#define SWAP(a,b) { int temp = a; a = b; b = temp; }


#define ODD_EVEN(x) ((x % 2 == 0) ? "even" : "odd")


#define CASE_CHANGE(c) ((islower(c)) ? toupper(c) : tolower(c))


#define MULTIPLY_BY_TWO(x) (x << 1)
#define DIVIDE_BY_TWO(x) (x >> 1)


#define DEBUG
#ifdef DEBUG
#define DEBUG_PRINT(x) cout << "DEBUG PRINT - " << __FUNCTION__ << "() and line no. " << __LINE__ << ": " << x << endl
#else
#define DEBUG_PRINT(x)
#endif

int main() {
   
    int a = 10, b = 30;
    cout << "Before swap: a=" << a << ", b=" << b << endl;
    SWAP(a,b);
    cout << "After swap: a=" << a << ", b=" << b << endl;

   
    int num = 9;
    cout << "\nNumber " << num << " is " << ODD_EVEN(num) << endl;

   
    string str = "Hello";
    cout << "\nOriginal: " << str << "\nChanged: ";
    for(char c : str) {
        cout << (char)CASE_CHANGE(c);
    }
    cout << endl;

   
    int x = 10;
    cout << "\nOriginal number: " << x << endl;
    cout << "Multiply by 2: " << MULTIPLY_BY_TWO(x) << endl;
    cout << "Divide by 2: " << DIVIDE_BY_TWO(x) << endl;

   
    DEBUG_PRINT("Testing debug macro");

    return 0;
}