//1
#include <iostream>
using namespace std;

struct EMP {
    char emp_name[50];
    int emp_id;
    int emp_age;
    float emp_salary;
};

int main() {
    EMP e1, e2, e3;

   
    cout << "Enter data for employee 1:\n";
    cout << "Name: "; cin >> e1.emp_name;
    cout << "ID: "; cin >> e1.emp_id;
    cout << "Age: "; cin >> e1.emp_age;
    cout << "Salary: "; cin >> e1.emp_salary;

    cout << "Enter data for employee 2:\n";
    cout << "Name: "; cin >> e2.emp_name;
    cout << "ID: "; cin >> e2.emp_id;
    cout << "Age: "; cin >> e2.emp_age;
    cout << "Salary: "; cin >> e2.emp_salary;

    cout << "Enter data for employee 3:\n";
    cout << "Name: "; cin >> e3.emp_name;
    cout << "ID: "; cin >> e3.emp_id;
    cout << "Age: "; cin >> e3.emp_age;
    cout << "Salary: "; cin >> e3.emp_salary;

    
    cout << "\nEmployee Data:\n";
    cout << "Employee 1: " << e1.emp_name << ", " << e1.emp_id << ", " << e1.emp_age << ", " << e1.emp_salary << "\n";
    cout << "Employee 2: " << e2.emp_name << ", " << e2.emp_id << ", " << e2.emp_age << ", " << e2.emp_salary << "\n";
    cout << "Employee 3: " << e3.emp_name << ", " << e3.emp_id << ", " << e3.emp_age << ", " << e3.emp_salary << "\n";

    
    cout << "\nSize of struct EMP: " << sizeof(EMP) << " bytes\n";

    return 0;
}

//2

#include <iostream>
using namespace std;

struct student {
    char student_name[100];
    int roll_no;
    int mark1;
    int mark2;
    int mark3;
};

int main() {
    student students[5];

   
    for (int i = 0; i < 5; i++) {
        cout << "Enter data for student " << i + 1 << ":\n";
        cout << "Name: "; cin >> students[i].student_name;
        cout << "Roll No: "; cin >> students[i].roll_no;
        cout << "Mark 1: "; cin >> students[i].mark1;
        cout << "Mark 2: "; cin >> students[i].mark2;
        cout << "Mark 3: "; cin >> students[i].mark3;
    }

  
    float highest_avg = 0;
    float lowest_avg = 100;
    string highest_avg_name;
    string lowest_avg_name;

    for (int i = 0; i < 5; i++) {
        float avg = (students[i].mark1 + students[i].mark2 + students[i].mark3) / 3.0;
        cout << "Average marks for " << students[i].student_name << ": " << avg << "\n";

        if (avg > highest_avg) {
            highest_avg = avg;
            highest_avg_name = students[i].student_name;
        }
        if (avg < lowest_avg) {
            lowest_avg = avg;
            lowest_avg_name = students[i].student_name;
        }
    }

    cout << "Highest average marks: " << highest_avg_name << " with " << highest_avg << "\n";
    cout << "Lowest average marks: " << lowest_avg_name << " with " << lowest_avg << "\n";

    return 0;
}

//3
#include <iostream>
using namespace std;

struct DATA {
    int num1;
    int num2;
    int num3;
    int average;
};

DATA CalculateAvg(DATA data) {
    data.average = (data.num1 + data.num2 + data.num3) / 3;
    return data;
}

int main() {
    DATA data;

    
    cout << "Enter num1: "; cin >> data.num1;
    cout << "Enter num2: "; cin >> data.num2;
    cout << "Enter num3: "; cin >> data.num3;

    
    data = CalculateAvg(data);
 cout << "Average: " << data.average << "\n";


cout <<"size of data: "<<sizeof(data)<<endl;
    return 0;
}

//4
#include <iostream>
using namespace std;

struct BATSMAN {
    char name[100];
    int age;
    int highest_score;
    int least_score;
    int no_of_ducks;
};

void printData(BATSMAN batsmen[], int size) {
    for (int i = 0; i < size; i++) {
        cout << "Batsman " << i + 1 << ":\n";
        cout << "Name: " << batsmen[i].name << "\n";
        cout << "Age: " << batsmen[i].age << "\n";
        cout << "Highest Score: " << batsmen[i].highest_score << "\n";
        cout << "Least Score: " << batsmen[i].least_score << "\n";
        cout << "Number of Ducks: " << batsmen[i].no_of_ducks << "\n";
    }
}

int main() {
    BATSMAN batsmen[3];

    
    for (int i = 0; i < 3; i++) {
        cout << "Enter data for batsman " << i + 1 << ":\n";
        cout << "Name: "; cin >> batsmen[i].name;
        cout << "Age: "; cin >> batsmen[i].age;
        cout << "Highest Score: "; cin >> batsmen[i].highest_score;
        cout << "Least Score: "; cin >> batsmen[i].least_score;
        cout << "Number of Ducks: "; cin >> batsmen[i].no_of_ducks;
    }

   
    printData(batsmen, 3);

    return 0;
}


//5

#include <iostream>
using namespace std;

struct EMP {
    char emp_name[50];
    int emp_id;
    int emp_age;
    float emp_salary;
};

int main() {
    EMP e1;
    EMP *eptr = &e1;

    
    cout << "Enter employee data:\n";
    cout << "Name: "; cin >> eptr->emp_name;
    cout << "ID: "; cin >> eptr->emp_id;
    cout << "Age: "; cin >> eptr->emp_age;
    cout << "Salary: "; cin >> eptr->emp_salary;

   
    cout << "\nEmployee Data:\n";
    cout << "Name: " << eptr->emp_name << "\n";
    cout << "ID: " << eptr->emp_id << "\n";
    cout << "Age: " << eptr->emp_age << "\n";
    cout << "Salary: " << eptr->emp_salary << "\n";

    return 0;
}
//6

#include <iostream>
using namespace std;

struct EMP {
    char emp_name[50];
    int emp_id;
    int emp_age;
    float emp_salary;
};

int main() {
    EMP *e1 = new EMP;
    EMP *e2 = new EMP;
    EMP *e3 = new EMP;

   
    cout << "Enter data for employee 1:\n";
    cout << "Name: "; cin >> e1->emp_name;
    cout << "ID: "; cin >> e1->emp_id;
    cout << "Age: "; cin >> e1->emp_age;
    cout << "Salary: "; cin >> e1->emp_salary;

    cout << "Enter data for employee 2:\n";
    cout << "Name: "; cin >> e2->emp_name;
    cout << "ID: "; cin >> e2->emp_id;
    cout << "Age: "; cin >> e2->emp_age;
    cout << "Salary: "; cin >> e2->emp_salary;

    cout << "Enter data for employee 3:\n";
    cout << "Name: "; cin >> e3->emp_name;
    cout << "ID: "; cin >> e3->emp_id;
    cout << "Age: "; cin >> e3->emp_age;
    cout << "Salary: "; cin >> e3->emp_salary;

  
    cout << "\nEmployee Data:\n";
    cout << "Employee 1: " << e1->emp_name << ", " << e1->emp_id << ", " << e1->emp_age << ", " << e1->emp_salary << "\n";
    cout << "Employee 2: " << e2->emp_name << ", " << e2->emp_id<< ", " << e2->emp_age << ", " << e2->emp_salary << "\n";  
    cout << "Employee 3: " << e3->emp_name << ", " << e3->emp_id << ", " << e3->emp_age << ", " << e3->emp_salary << "\n"; 

    return 0;
}

#include <iostream>
#include <string>

using namespace std;


struct TIME {
    int hours;
    int minutes;
    int seconds;
};


void PrintTime(TIME t1) {
    printf("%02d:%02d:%02d", t1.hours, t1.minutes, t1.seconds);
}


int CompareTime(TIME t1, TIME t2) {
    if (t1.hours == t2.hours && t1.minutes == t2.minutes && t1.seconds == t2.seconds)
        return 1;
    return 0;
}


TIME GetDifference(TIME *pt1, TIME *pt2) {
    TIME diff;
    int totalSeconds1 = pt1->hours * 3600 + pt1->minutes * 60 + pt1->seconds;
    int totalSeconds2 = pt2->hours * 3600 + pt2->minutes * 60 + pt2->seconds;
    int diffSeconds = abs(totalSeconds1 - totalSeconds2);
    
    diff.hours = diffSeconds / 3600;
    diffSeconds %= 3600;
    diff.minutes = diffSeconds / 60;
    diff.seconds = diffSeconds % 60;
    
    return diff;
}


int main(int argc, char *argv[]) {
    if (argc != 7) {
        printf("Invalid number of arguments\n");
        return 1;
    }
    
    TIME t1 = {atoi(argv[1]), atoi(argv[2]), atoi(argv[3])};
    TIME t2 = {atoi(argv[4]), atoi(argv[5]), atoi(argv[6])};
    
  
    printf("First time: ");
    PrintTime(t1);
    printf("\n");
    
   
    printf("Second time: ");
    PrintTime(t2);
    printf("\n");
    
 
    if (CompareTime(t1, t2))
        printf("Times are identical\n");
    else
        printf("Times are different\n");
    

    TIME diff = GetDifference(&t1, &t2);
    printf("Time difference: ");
    PrintTime(diff);
    printf("\n");
    
    return 0;
}
