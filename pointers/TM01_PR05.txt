#include <iostream>
#include <string>
#include <unordered_map>
using namespace std;

void longestSubstring(string s, int n, unordered_map<string, int>& map) {
    for (int i = 0; i < s.size(); i++) {
        string sub = "";
        for (int j = i; j < s.size(); j++) {
            sub += s[j];
            if (sub.size() == n) {
                map[sub]++;
            }
        }
    }
      
}

int main() {
   
    string s = "abcabc abc"; 
    int n = 3;
    unordered_map<string, int> map;
    longestSubstring(s, n, map);
    int max = 0;
    string res = "";
    for (auto it = map.begin(); it != map.end(); it++) {
        if (it->second > max) {
            max = it->second;
            res = it->first;
        }
    }
    cout << res <<" "<< max << endl;

    
    return 0;
}
