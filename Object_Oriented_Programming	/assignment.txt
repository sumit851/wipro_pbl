#include <iostream>
using namespace std;

class Queue {
private:
    int *que;
    int qsize;
    int idxfront;
    int idxrear;

public:
    void create(int size) {
        que = new int[size];
        qsize = size;
        idxfront = idxrear = -1;
    }

    void cleanup() {
        delete[] que;
        qsize = 0;
        idxfront = idxrear = -1;
    }

    void insert(int value) {
        if (idxrear == qsize - 1) {
            cout << "Queue is full\n";
            return;
        }
        if (idxfront == -1) 
            idxfront = 0;
        que[++idxrear] = value;
    }

    int remove() {
        if (idxfront == -1 || idxfront > idxrear) {
            cout << "Queue is empty\n";
            return -1;
        }
        return que[idxfront++];
    }

    int size() {
        if (idxfront == -1)
            return 0;
        return idxrear - idxfront + 1;
    }
};

int main() {
    Queue q;
    q.create(10);

    cout << "Initial size: " << q.size() << endl;
    
    q.insert(8);
    q.insert(12);
    q.insert(17);
    q.insert(25);

    cout << "Removed: " << q.remove() << endl;
    cout << "Removed: " << q.remove() << endl;
    cout << "Removed: " << q.remove() << endl;

    q.insert(30);
    cout << "Current size: " << q.size() << endl;

    cout << "Removed: " << q.remove() << endl;
    cout << "Removed: " << q.remove() << endl;
    
    cout << "Final size: " << q.size() << endl;

    q.cleanup();
    return 0;
}

